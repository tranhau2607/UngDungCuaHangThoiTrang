/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.User;

import DAO.*;
import MODEL.GioHang;
import MODEL.SanPham;
import com.microsoft.sqlserver.jdbc.StringUtils;
import java.awt.Container;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author tsmda
 */
public class cardGioHang extends javax.swing.JPanel {

    GioHangDao ghdao = new GioHangDao();
    GioHang gh = new GioHang();
    String TenDN;
    String MaSP;

    public String getTenDN() {
        return TenDN;
    }

    public void setTenDN(String TenDN) {
        this.TenDN = TenDN;
    }

    public String getMaSP() {
        return MaSP;
    }

    public void setMaSP(String MaSP) {
        this.MaSP = MaSP;
    }

    public cardGioHang() {
        initComponents();
        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, 100, 1);
        pinnerSoLuong.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTenSP = new javax.swing.JLabel();
        lblHinh = new javax.swing.JLabel();
        lblGia = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        lblThanhTien = new javax.swing.JLabel();
        pinnerSoLuong = new javax.swing.JSpinner();
        btnCapNhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        lblTenSP.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblTenSP.setText("Tên sản phẩm");

        lblHinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblGia.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblGia.setText("giá");

        lblSize.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblSize.setText("size");

        lblThanhTien.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblThanhTien.setText("Thành tiền");

        pinnerSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pinnerSoLuong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnCapNhat.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnCapNhat.setText("Edit");
        btnCapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnXoa.setText("Delete");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(lblGia, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(pinnerSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(lblTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGia)
                    .addComponent(pinnerSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThanhTien)
                    .addComponent(btnCapNhat)
                    .addComponent(btnXoa)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteGioHang();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        updateGioHang();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JLabel lblSize;
    private javax.swing.JLabel lblTenSP;
    private javax.swing.JLabel lblThanhTien;
    private javax.swing.JSpinner pinnerSoLuong;
    // End of variables declaration//GEN-END:variables

    public void load1SP() {
        gh = ghdao.get1GioHang(getTenDN(), getMaSP());
        lblTenSP.setText(gh.getTenSanPham());
        lblGia.setText("" + gh.getGia());
        lblSize.setText(gh.getKichThuoc());
        lblThanhTien.setText("" + gh.getThanhTien());
        pinnerSoLuong.setValue(gh.getSoLuong());
        ImageIcon icon = new ImageIcon("src\\IMG_Product\\IMG_Product1\\" + gh.getAnh());
        Image scaledImage = icon.getImage().getScaledInstance(90, 120, Image.SCALE_SMOOTH);
        icon.setImage(scaledImage);
        lblHinh.setIcon(icon);
    }

    public void deleteGioHang() {
        int k = ghdao.deleteGioHang(getTenDN(), getMaSP());
        if (k != -1) {
            Container container = this.getParent();
            container.remove(this);
            container.revalidate();
            container.repaint();
            JOptionPane.showMessageDialog(this, "Đã xóa sản phẩm khỏi giỏ hàng");
        } else {
            JOptionPane.showMessageDialog(this, "Xóa sản phẩm không thành công");
        }
    }

    public void updateGioHang() {
        int sl = (int) pinnerSoLuong.getValue();
        int k = ghdao.updateGioHang(getTenDN(), getMaSP(), sl);
        if (sl < 0) {
            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0");
        } else {
            if (k != -1) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                load1SP();

            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật không thành côngg");
            }
        }

    }
}
