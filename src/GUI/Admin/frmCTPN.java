/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Admin;

import DAO.ChiTietPhieuNhapDao;
import DAO.PhieuNhapDao;
import DAO.SanPhamDao;
import MODEL.ChiTietPhieuNhap;
import MODEL.PhieuNhap;
import MODEL.SanPham;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hung Anh
 */
public class frmCTPN extends javax.swing.JFrame {

    private frmPhieuNhap loadForm;

    public void loadForm(frmPhieuNhap loadForm) {
        this.loadForm = loadForm;
    }
    List<ChiTietPhieuNhap> listCTPN = new ArrayList<>();
    ChiTietPhieuNhapDao ctpnDao = new ChiTietPhieuNhapDao();
    ChiTietPhieuNhap ctpn = new ChiTietPhieuNhap();

    List<PhieuNhap> listPN = new ArrayList<>();
    PhieuNhapDao pnDao = new PhieuNhapDao();
    PhieuNhap pn = new PhieuNhap();

    List<SanPham> listSP = new ArrayList<>();
    SanPhamDao spDao = new SanPhamDao();
    SanPham sp = new SanPham();

    int index = 0;
    DefaultTableModel tblModel = new DefaultTableModel();

    int MaPN;

    public int getMaPN() {
        return MaPN;
    }

    public void setMaPN(int MaPN) {
        this.MaPN = MaPN;
        txtMaPN.setText("" + MaPN);
    }

    /**
     * Creates new form frmCTPN
     */
    public frmCTPN() {
        initComponents();
        maSanPham();
        setLocationRelativeTo(null);
        fillToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblQuayLai1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        cboMasp = new javax.swing.JComboBox<>();
        txtMaPN = new javax.swing.JTextField();
        txtDVT = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtDongianhap = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCTPN = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, java.awt.Color.gray));

        jPanel1.setBackground(new java.awt.Color(0, 102, 51));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CHI TIẾT PHIẾU NHẬP");

        lblQuayLai1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/thoat.png"))); // NOI18N
        lblQuayLai1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblQuayLai1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQuayLai1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(546, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(455, 455, 455)
                .addComponent(lblQuayLai1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQuayLai1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel2.setText("Mã sản phẩm:");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/xoa.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sua.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnthem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/them.png"))); // NOI18N
        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/them.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnthem)
                    .addComponent(btnLamMoi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSua)
                    .addComponent(btnXoa))
                .addGap(25, 25, 25))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnthem, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua)
                    .addComponent(btnLamMoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboMasp.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        txtMaPN.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtMaPN.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)), "Mã phiếu nhập", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        txtDVT.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtDVT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)), "Đơn vị tính", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        txtSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtSoLuong.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)), "Số lượng", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        txtDongianhap.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtDongianhap.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)), "Đơn giá nhập", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(txtMaPN)
                    .addComponent(txtSoLuong)
                    .addComponent(txtDVT)
                    .addComponent(cboMasp, 0, 300, Short.MAX_VALUE)
                    .addComponent(txtDongianhap, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboMasp, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txtDongianhap, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblCTPN.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        tblCTPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Đơn vị tính", "Số lượng", "Đơn giá nhập", "Thành tiền"
            }
        ));
        tblCTPN.setRowHeight(50);
        tblCTPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTPNMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCTPN);
        if (tblCTPN.getColumnModel().getColumnCount() > 0) {
            tblCTPN.getColumnModel().getColumn(0).setMinWidth(150);
            tblCTPN.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblCTPN.getColumnModel().getColumn(0).setMaxWidth(150);
            tblCTPN.getColumnModel().getColumn(1).setMinWidth(150);
            tblCTPN.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblCTPN.getColumnModel().getColumn(1).setMaxWidth(150);
            tblCTPN.getColumnModel().getColumn(2).setMinWidth(150);
            tblCTPN.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblCTPN.getColumnModel().getColumn(2).setMaxWidth(150);
            tblCTPN.getColumnModel().getColumn(3).setMinWidth(250);
            tblCTPN.getColumnModel().getColumn(3).setPreferredWidth(250);
            tblCTPN.getColumnModel().getColumn(3).setMaxWidth(250);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1457, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE)
                    .addContainerGap())
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1))
                    .addGap(1629, 1629, 1629)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 831, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCTPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTPNMouseClicked
        showDetail();
    }//GEN-LAST:event_tblCTPNMouseClicked

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        StringBuilder sb2 = new StringBuilder();
        StringBuilder sb = new StringBuilder();
        ktRong(sb);
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString());
            return;
        }
        StringBuilder sb1 = new StringBuilder();
        kiemSo(sb1);
        if (sb1.length() > 0) {
            JOptionPane.showMessageDialog(this, sb1.toString());
            return;
        }
        addCTPN();
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteCTPN();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        updateCTPN();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void lblQuayLai1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQuayLai1MouseClicked
        this.dispose();
    }//GEN-LAST:event_lblQuayLai1MouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        newText();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCTPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCTPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCTPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCTPN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCTPN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnthem;
    private javax.swing.JComboBox<String> cboMasp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQuayLai1;
    private javax.swing.JTable tblCTPN;
    private javax.swing.JTextField txtDVT;
    private javax.swing.JTextField txtDongianhap;
    private javax.swing.JTextField txtMaPN;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables

    public void fillToTable() {

        ChiTietPhieuNhapDao ctpndao = new ChiTietPhieuNhapDao();
        listCTPN = ctpndao.getlistCTPNByMaPN(this.getMaPN());

        tblModel = (DefaultTableModel) tblCTPN.getModel();
        tblModel.setRowCount(0);
        for (ChiTietPhieuNhap ctpn : listCTPN) {
            Object[] row = new Object[]{ctpn.getMaSanPham(), ctpn.getDonViTinh(), ctpn.getSoLuong(), ctpn.getDonGiaNhap(), ctpn.getThanhTien()};
            tblModel.addRow(row);

        }
        tblCTPN.setModel(tblModel);
    }

    public void maSanPham() {
        listSP = spDao.showAllSP();
        for (SanPham l : listSP) {
            String maSP = l.getMaSanPham();
            cboMasp.addItem(maSP);
        }
    }

    public void showDetail() {
        index = tblCTPN.getSelectedRow();
        ChiTietPhieuNhap ctpn = listCTPN.get(index);
        cboMasp.setSelectedItem(ctpn.getMaSanPham());
        txtDVT.setText(ctpn.getDonViTinh());
        int soluong = ctpn.getSoLuong();
        String giaTriText = String.valueOf(soluong);
        txtSoLuong.setText(giaTriText);
        float dongianhap = ctpn.getDonGiaNhap();
        String giaTriText1 = String.valueOf(dongianhap);
        txtDongianhap.setText(giaTriText1);

    }

    public void addCTPN() {
        ChiTietPhieuNhapDao ctpnDao = new ChiTietPhieuNhapDao();
        ChiTietPhieuNhap ctpn = new ChiTietPhieuNhap();
        ctpn.setMaPhieuNhap(this.getMaPN());
        String maSP = (String) cboMasp.getSelectedItem();
        ctpn.setMaSanPham(maSP);
        ctpn.setDonViTinh(txtDVT.getText());
        ctpn.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctpn.setDonGiaNhap(Float.parseFloat(txtDongianhap.getText()));

        if (ctpnDao.kiemtraTrungCTPN(ctpn.getMaPhieuNhap(), ctpn.getMaSanPham()) > 0) {
            JOptionPane.showMessageDialog(this, "Chi tiết phiếu nhập đã tồn tại vui lòng cập nhật lại chi tiết.");
            return;
        }
        int x = ctpnDao.addChiTietPhieuNhap(ctpn);
        if (x > 0) {
            JOptionPane.showMessageDialog(this, "Thêm chi tiết phiếu nhập thành công!");
            fillToTable();
            loadForm.fillToTable();
            newText();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm chi tiết phiếu nhập thất bại!");
            newText();
        }
    }
    String MaPhieuNhap;

    public String getMaPhieuNhap() {
        return MaPhieuNhap;
    }

    public void setMaPhieuNhap(String MaPhieuNhap) {
        this.MaPhieuNhap = MaPhieuNhap;
    }

    public void deleteCTPN() {
        ChiTietPhieuNhapDao ctpndao = new ChiTietPhieuNhapDao();
        index = tblCTPN.getSelectedRow();
        ChiTietPhieuNhap pn = listCTPN.get(index);

        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Hay chon chi tiet phieu nhap muon xoa");

        } else {
            if (ctpndao.xoaCTPN("" + pn.getMaPhieuNhap(), pn.getMaSanPham()) != 0) {
                JOptionPane.showMessageDialog(this, "Xoa thanh cong");
                fillToTable();
                loadForm.fillToTable();
                newText();
            } else {
                JOptionPane.showMessageDialog(this, "Xoa khong thanh cong");
                newText();
            }
        }
    }

    public void updateCTPN() {
        ChiTietPhieuNhapDao ctpnDao = new ChiTietPhieuNhapDao();
        ChiTietPhieuNhap ctpn = new ChiTietPhieuNhap();
        ctpn.setMaPhieuNhap(this.getMaPN());
        String maSP = (String) cboMasp.getSelectedItem();
        ctpn.setMaSanPham(maSP);
        ctpn.setDonViTinh(txtDVT.getText());
        ctpn.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctpn.setDonGiaNhap(Float.parseFloat(txtDongianhap.getText()));

        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Hãy chọn phiếu nhập muốn update");

        } else {
            if (ctpnDao.updateChiTietPhieuNhap(ctpn) > 0) {
                fillToTable();
                JOptionPane.showMessageDialog(this, "update thành công");
                newText();
                loadForm.fillToTable();
            } else {
                JOptionPane.showMessageDialog(this, "update thất bại");
                newText();
            }
        }
    }

    private void ktRong(StringBuilder sb) {

        if (txtDVT.getText().equals("")) {
            sb.append("Đơn vị tính không được để trống\n");
        }
        if (txtSoLuong.getText().equals("")) {
            sb.append("Số lượng được để trống\n");
        }
        if (txtDongianhap.getText().equals("")) {
            sb.append("Đơn giá không được để trống\n");
        }
    }

    public void kiemSo(StringBuilder sb1) {
        if (txtSoLuong.getText().length() != 0) {
            String text2 = txtSoLuong.getText();
            try {
                int x = Integer.parseInt(text2);
                if (x < 0) {
                    sb1.append("Số lượng phải lớn hơn 0\n");
                }
            } catch (NumberFormatException e) {
                sb1.append("Số lượng chỉ được nhập số\n");
            }
        }
        if (txtDongianhap.getText().length() != 0) {
            String text2 = txtDongianhap.getText();
            try {
                float x = Float.parseFloat(text2);
                if (x < 0) {
                    sb1.append("Giá phải lớn hơn 0\n");
                }
            } catch (NumberFormatException e) {
                sb1.append("Giá chỉ được nhập số\n");
            }
        }
    }

    public void newText() {
        txtDVT.setText("");
        txtSoLuong.setText("");
        txtDongianhap.setText("");
    }
}
